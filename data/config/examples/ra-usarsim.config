<?xml version="1.0" encoding="ISO-8859-1"?>
<rdk:object class="RAgentConfig" xmlns:rdk="http://sied.dis.uniroma1.it/rdk">
  <rdk:string name="agentName">ra01</rdk:string>
  <rdk:string name="ypFilename">yp.config</rdk:string>
  <rdk:object name="modules" class="ModuleConfigVector" version="2">
    <rdk:int32 name="size" value="2"/>
    <rdk:int32 name="remoteIdx" value="0"/>
    <rdk:uint8 name="special" value="0"/>
    <rdk:object class="ModuleConfig" version="2">
      <rdk:string name="moduleName">stringWriter</rdk:string>
      <rdk:string name="library">rdkram_stringwritermodule</rdk:string>
      <rdk:object name="visualConfigPosition" class="RPoint2i">
        <rdk:array type="int32" size="2">0 0</rdk:array>
      </rdk:object>
      <rdk:string name="textConfig">
        #state=                                      # (volatile) Module state
        #stats/activityCounter=                      # (volatile) Activity counter (increments for each iteration)
        #stats/iterationDuration/last=               # (volatile) Duration of last iteration
        #stats/iterationDuration/mean=               # (volatile) Duration of iterations: mean
        #stats/scheduleInterval/mean=                # (volatile) Schedulation interval: mean
        enabled=Yes                                  # Module is enabled
        params/stringToWrite=This is a string        # String to print
      </rdk:string>
      <rdk:object name="objConfigs" class="PairVector" version="2">
        <rdk:int32 name="size" value="0"/>
        <rdk:int32 name="remoteIdx" value="0"/>
        <rdk:uint8 name="special" value="0"/>
      </rdk:object>
    </rdk:object>
    <rdk:object class="ModuleConfig" version="2">
      <rdk:string name="moduleName">robot</rdk:string>
      <rdk:string name="library">rdkram_usarsimclientmodule</rdk:string>
      <rdk:object name="visualConfigPosition" class="RPoint2i">
        <rdk:array type="int32" size="2">0 0</rdk:array>
      </rdk:object>
      <rdk:string name="textConfig">
        #ball/position=                              # (volatile) Ball position
        #ball/visible=                               # (volatile) Ball is visible
        #cmds/dropRFID=                              # (volatile) Drop RFID
        #cmds/readRFID=                              # (volatile) Read RFID
        #cmds/writeRFID=                             # (volatile) Write RFID
        #dataQueue=                                  # (volatile) Robot data queue
        #desiredJog=                                 # (volatile) Robot desired jog
        #desiredSpeed=                               # (volatile) Robot desired speed
        #in/RFIDDataToWrite=                         # (NULL) Data to write into RFID
        #info/initialPose3D=                         # (volatile) Initial pose 3D
        #info/vehicleType=                           # (volatile) Vehicle type
        #inuSensorData=                              # (volatile) INU sensor data
        #itemOnMap=                                  # (volatile) Rfid victims to draw
        #jog=                                        # (volatile) Robot jog
        #laserData=                                  # (volatile) Laser data
        #out/RFIDData=                               # (volatile) Data contained in last read RFID
        #out/lastDetectedRFIDIDs=                    # (volatile) IDs of last detected RFIDs
        #out/lastRFIDDropSuccesful=                  # (volatile) Last RFID drop was succesful
        #out/lastRFIDReadingSuccesful=               # (volatile) Last RFID reading was succesful
        #out/lastRFIDWritingSuccesful=               # (volatile) Last RFID writing was succesful
        #pantilt/pan=                                # (volatile) PanTilt current pan position
        #pantilt/tilt=                               # (volatile) PanTilt current tilt position
        #pantilt/view/direction=                     # (volatile) PanTilt direction
        #quadrotor/pose3=                            # (volatile) QuadRotor current 3d pose
        #rangeScanners/hokuyo/dataQueue=             # (volatile) HOKUYO QUEUE
        #rangeScanners/hokuyo/laserData=             # (volatile) Second laser data
        #sonarData=                                  # (volatile) Sonar data
        #sonarData2=                                 # (volatile) Sonar data
        #speed=                                      # (volatile) Robot speed
        #stalled=                                    # (volatile) Robot stalled
        #state=                                      # (volatile) Module state
        #stats/activityCounter=                      # (volatile) Activity counter (increments for each iteration)
        #stats/iterationDuration/last=               # (volatile) Duration of last iteration
        #stats/iterationDuration/mean=               # (volatile) Duration of iterations: mean
        #stats/scheduleInterval/mean=                # (volatile) Schedulation interval: mean
        #status/batteryLife=                         # (volatile) Battery life
        #status/multiViewNumber=                     # (volatile) Multiview subview number
        #tags=                                       # (volatile) Rfid tags to draw
        #victimSensor/partsSeen=                     # (volatile) Victim parts currently seen
        #view/currentVictim=                         # (volatile) Current victim
        #whichStalled=                               # (volatile) Which robot wheel stalled
        botClass=USARBot.Zerg                        # Bot class
        botHost=127.0.0.1                            # Server host
        botPort=3000                                 # Server port
        copyOdometry=No                              # Copy odometry pose to estimated pose (to by-pass the scanmatcher process)
        devices/pantiltEnabled=Yes                   # PanTilt device enabled
        devices/victimRfidSensorEnabled=Yes          # Victim RFID Sensor device enabled
        devices/victimSensorEnabled=Yes              # Victim Sensor device enabled
        enabled=Yes                                  # Module is enabled
        estimatedPose=@/robot/odometryPose           # Pose of robot (localization/slam estimate)
        expansionSize=0.15                           # Link to obstacle expander property 
        height=0.30                                  # Depth of robot (x, rectangular robot)
        imageHost=127.0.0.1                          # Image host
        in/RFIDIDToRead=0                            # ID of RFID to read
        in/RFIDIDToWrite=0                           # ID of RFID to write into
        info/initialPose2D=12.61 2.68 -0             # Initial pose 2D
        ins/pitch=-359.82                            # Pitch from the INS
        ins/roll=0.00                                # Roll from the INS
        ins/yaw=0.00                                 # Yaw from the INS
        interleavedView/enabled=No                   # Enable interleaved view
        interleavedView/numberOfRobots=2             # Number of robots sharing camera
        interleavedView/screenshotEnabled=No         # Screenshot enabled (this bool is enabled when is the robot's turn)
        interleavedView/timeInterval=1.00            # Time interval to change camera
        interleavedView/turn=0                       # View order (turn of this robot)
        laserMaxRange=20.00                          # Max range for laser reading
        laserMinRange=0.04                           # Min range for laser reading
        laserPose=0 0 0                              # Laser pose on robot
        maxWheelSpeed=6.28                           # Maximum speed for single wheel
        odometryPose=0.0006 0 0                      # Pose of robot (odometry)
        pantilt/desiredPan=0.00                      # PanTilt desired pan
        pantilt/desiredTilt=0.00                     # PanTilt desired tilt
        pantilt/missionPackageName=CameraPanTilt     # PanTilt mission package name
        pantilt/view/directionDist=2.00              # PanTilt direction distance (only display purpose)
        pantilt/view/directionFov=45.00              # PanTilt direction FOV (only display purpose)
        params/touchConfig=                          # Configuration string for the touch sensors
        params/useRFIDLocation=Yes                   # Use Location information for RFID
        quadrotor/altitudeVelocity=0.00              # QuadRotor altitude velocity
        quadrotor/current_x=12.61                    # QuadRotor current x coordinate
        quadrotor/current_y=2.68                     # Quadrotor current y coordinate
        quadrotor/current_z=-1.97                    # Quadrotor current z coordinate
        quadrotor/lateralVelocity=0.00               # QuadRotor lateral velocity
        quadrotor/linearVelocity=0.00                # QuadRotor linear velocity
        quadrotor/pose2=12.61 2.68 0                 # Quadorotor current 2D pose
        quadrotor/rotationalVelocity=0.00            # QuadRotor rotational velocity
        quadrotor/yaw=-0.00                          # Quadrotor current yaw coordinate
        radius=0.30                                  # Radius of robot (circular robot)
        rangeScanners/hokuyo/sensorName=Scanner2     # Hokuyo sensor name
        remoteMapperName=Jamaiko                     # Remote Mapper Name
        remoteWrite=No                               # Remote writing
        rfidWriteFile=No                             # Write RFID to file
        saveData=No                                  # check whether we have to write on log
        sensors/gps/fix=No                           # Indicates if GPS has acquired a position or not
        sensors/gps/latitude=                        # Latitude
        sensors/gps/longitude=                       # Longitude
        sensors/gps/name=                            # Name of the last GPS sensor acquired
        sensors/gps/pose=0 0 0                       # Pose computed from GPS data
        sensors/gps/satellites=0                     # Number of satellites tracked by the GPS
        sensors/groundTruth/pose=12.61 2.68 0        # Ground truth pose
        shape=0                                      # Shape of robot
        startPitch=0.00                              # Start Pitch, Rad.
        startPoseName=PlayerStart                    # Start pose name (so you don't need to set numbers, leave blank to use numbers)
        startRoll=0.00                               # Start y position, Rad.
        startX=4.90                                  # Start x position, Meters.
        startY=1.90                                  # Start y position, Meters.
        startYaw=0.00                                # Start z position, Rad.
        startZ=1.80                                  # Start z position, Meters.
        status/usarsimTime=5754.680                  # USARSim time from the STA message
        tarantula/controlTracks=No                   # Robot is controlled through left and right track instead of speed and jog
        tarantula/desiredFrontFlipperSpeed=0.00      # Front flipper desired speed
        tarantula/desiredLeftTrackSpeed=0.00         # Left track desired speed
        tarantula/desiredRearFlipperSpeed=0.00       # Rear flipper desired speed
        tarantula/desiredRightTrackSpeed=0.00        # Right track desired speed
        tarantula/frontFlipperPosition=0.00          # Front flipper angle
        tarantula/hasPWMFlippers=No                  # Tarantula flippers are controlled by PWM
        tarantula/hasPWMTracks=No                    # Tarantula tracks are controlled by PWM
        tarantula/maxFlipperSpeed=45.00              # Maximum flipper speed
        tarantula/rearFlipperPosition=0.00           # Rear flipper angle
        targetPose=0 0 0                             # Target pose (gotopos)
        useDeviceIRCamera=Yes                        # Use device IRCamera
        useDeviceLaser=Yes                           # Use device Laser
        useDeviceSonar=Yes                           # Use device Sonar
        useRealPose=No                               # Use real pose
        useUsarSimTimestamps=No                      # Use UsarSim timestamps
        victimName=No_victim                         # Victim name
        victimRfidSensor/fov=360.00                  # Victim RFID Sensor FOV (filter)
        victimRfidSensor/maxDist=10000.00            # Victim RFID Sensor max distance (filter)
        victimRfidSensor/useReliability=No           # Victim RFID Sensor use reliability
        victimSensor/partsSeenInterval=1.000         # Interval to compute victim parts currently seen
        victimX=0.00                                 # Victim x
        victimY=0.00                                 # Victim y
        victimZ=0.00                                 # Victim z
        width=0.30                                   # Width of robot (y, rectangular robot)
      </rdk:string>
      <rdk:object name="objConfigs" class="PairVector" version="2">
        <rdk:int32 name="size" value="0"/>
        <rdk:int32 name="remoteIdx" value="0"/>
        <rdk:uint8 name="special" value="0"/>
      </rdk:object>
    </rdk:object>
  </rdk:object>
</rdk:object>

