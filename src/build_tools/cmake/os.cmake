# OS-specific tests
IF($ENV{VERBOSE})
	MESSAGE(STATUS "CMAKE_SYSTEM = '${CMAKE_SYSTEM}'")
	MESSAGE(STATUS "CMAKE_SYSTEM_NAME = '${CMAKE_SYSTEM_NAME}'")
ENDIF($ENV{VERBOSE})

IF("${CMAKE_CROSSCOMPILING}" STREQUAL TRUE)
	MESSAGE(STATUS "Crosscompiling on ${CMAKE_HOST_SYSTEM_NAME} for ${CMAKE_SYSTEM_NAME}-${CROSS_ARCH} platform")
	SET(OpenRDK_ARCH "${CROSS_ARCH}")
	LIST(APPEND RDKCORE_DEFINITIONS -DCROSSCOMPILING)
ELSE("${CMAKE_CROSSCOMPILING}" STREQUAL TRUE)
	SET(OpenRDK_ARCH "generic")
	IF("${CMAKE_SYSTEM}" MATCHES "Linux")
		MESSAGE(STATUS "Compiling on Linux")
		SET(LINUX 1)
		LIST(APPEND RDKCORE_DEFINITIONS -DLINUX)
		EXEC_PROGRAM("uname" ARGS -m OUTPUT_VARIABLE myArch)
		IF("${myArch}" MATCHES "x86_64")
			MESSAGE(STATUS "  64-bit architecture detected")
			SET(LINUX64 1)
			#		STRING(REGEX REPLACE "/src$" "/lib64" LIBRARY_OUTPUT_PATH ${OpenRDK_SOURCE_DIR})
			SET(LIB_SUFFIX "64") # not tested, should replace the string above
		ENDIF("${myArch}" MATCHES "x86_64")
	ELSE("${CMAKE_SYSTEM}" MATCHES "Linux")
		IF("${CMAKE_SYSTEM}" MATCHES "CYGWIN")
			MESSAGE(STATUS "Compiling on Cygwin (Windows)")
			SET(CYGWIN 1)
			LIST(APPEND RDKCORE_DEFINITIONS -DCYGWIN)
			SET(CMAKE_CXX_COMPILER "${OpenRDK_ROOT}/src/build_tools/cygrevc++.sh")
			SET(CMAKE_INSTALL_PREFIX "${OpenRDK_ROOT}")
		ELSE("${CMAKE_SYSTEM}" MATCHES "CYGWIN")
			SET(LINUX 0)
			IF(APPLE)
				MESSAGE(STATUS "Compiling on Mac")
				SET(MACOSX 1)
				LIST(APPEND RDKCORE_DEFINITIONS -DMACOSX)
			ELSE(APPLE)
				MESSAGE(FATAL_ERROR "A strange platform: '${CMAKE_SYSTEM}'")
			ENDIF(APPLE)
		ENDIF("${CMAKE_SYSTEM}" MATCHES "CYGWIN")
	ENDIF("${CMAKE_SYSTEM}" MATCHES "Linux")
ENDIF("${CMAKE_CROSSCOMPILING}" STREQUAL TRUE)

STRING(TOUPPER ${OpenRDK_ARCH} openrdk_arch)
SET(OPENRDK_ARCH_DEFINITION OPENRDK_ARCH_${openrdk_arch})

# This will be used in rdk-config
LIST(APPEND RDKCORE_DEFINITIONS -D${OPENRDK_ARCH_DEFINITION})

