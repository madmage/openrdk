SET(MOC_FILES rqpropertylistview.h rqpropertydragobject.h rqmainwindow.h rqtabwidget.h simplepropertyviewermodule.h bigpropertyviewermodule.h rqglviewer.h)
IF(NOT OPENGL_FOUND)
	LIST(REMOVE_ITEM MOC_FILES rqglviewer.h)
ENDIF(NOT OPENGL_FOUND)

FILE(GLOB COMPILE_FILE_LIST "*.cpp")
SET(MOCD_FILES "")
FOREACH(F ${MOC_FILES})
	QT_WRAP_CPP(rdkrq_common MOCD_FILES "${F}")
ENDFOREACH(F ${MOC_FILES})

IF(NOT OPENGL_FOUND)
	LIST(REMOVE_ITEM COMPILE_FILE_LIST rimagetogltexture.cpp rqglviewer.cpp)
ENDIF(NOT OPENGL_FOUND)

ADD_LIBRARY(rdkrq_common SHARED ${COMPILE_FILE_LIST} ${MOCD_FILES})
# not available yet, thus skipping this for now#IF(NOT ${CMAKE_SYSTEM} MATCHES "CYGWIN")
#  INSTALL(TARGETS rdkrq_common LIBRARY DESTINATION ${LIBRARY_INSTALL_PATH})
#ELSE(NOT ${CMAKE_SYSTEM} MATCHES "CYGWIN")
#  INSTALL(TARGETS rdkrq_common RUNTIME DESTINATION ${LIBRARY_INSTALL_PATH})
#ENDIF(NOT ${CMAKE_SYSTEM} MATCHES "CYGWIN")

TARGET_LINK_LIBRARIES(rdkrq_common rdkcore ${QT_LIBRARIES})
INCLUDE_DIRECTORIES(${QT_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${RDKCORE_INCLUDE_DIR})
ADD_DEFINITIONS(${RDKCORE_DEFINITIONS})

IF(OPENGL_FOUND)
	TARGET_LINK_LIBRARIES(rdkrq_common ${OPENGL_LIBRARIES})
	INCLUDE_DIRECTORIES(${OPENGL_INCLUDE_DIR})
	IF(CYGWIN)
		TARGET_LINK_LIBRARIES(rdkrq_common "-lGL -lGLU")	
		# FIXME I'm not sure why this is needed for Cygwin, in OPENGL_LIBRARIES there are windows libraries, not Cygwin's 
	ENDIF(CYGWIN)
ENDIF(OPENGL_FOUND)

